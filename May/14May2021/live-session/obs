
Key Observations to drive further optimisation

At the end of the first pass,

	* stack[top] is always "0"
	* stack[bottom] is always the index of the max value in nums[] 




































Therefore, the "next greater element" of each element from nums[stack[top]] through nums[stack[bottom]] has been confirmed. 


























So it is only necessary to iterate nums[nums.length - 1] through nums[stack[bottom] + 1] in the second pass to find those greater elements that have not been found in the first pass.




































And for any element nums[i], if its "next greater element" is not found in the first pass, it will only be necessary to compare it with nums[stack[top]]...nums[stack[bottom].

